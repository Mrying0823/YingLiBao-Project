<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.example.ylb.dataservice.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="org.example.ylb.api.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="login_password" property="loginPassword" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="id_card" property="idCard" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="header_image" property="headerImage" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, phone, login_password, name, id_card, add_time, last_login_time, header_image
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from u_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from u_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.example.ylb.api.model.User" >
    insert into u_user (id, phone, login_password, 
      name, id_card, add_time, 
      last_login_time, header_image)
    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{loginPassword,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{headerImage,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.example.ylb.api.model.User" >
    insert into u_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="loginPassword != null" >
        login_password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="idCard != null" >
        id_card,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="headerImage != null" >
        header_image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="headerImage != null" >
        #{headerImage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.ylb.api.model.User" >
    update u_user
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        login_password = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="headerImage != null" >
        header_image = #{headerImage,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.ylb.api.model.User" >
    update u_user
    set phone = #{phone,jdbcType=VARCHAR},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      header_image = #{headerImage,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 注册用户数量 -->
  <select id="selectCountUser" resultType="java.lang.Integer">
    select
    count(*) as ct

    from u_user
  </select>

  <!-- 查询用户表中所有的手机号 -->
  <select id="selectUserPhone" resultType="java.lang.String">
    select
    phone

    from u_user

    group by phone
  </select>

  <!-- 注册新用户，获取用户 id -->
  <insert id="insertNewUserReturnId" parameterType="org.example.ylb.api.model.User">
    insert into u_user (id, phone, login_password,
                        name, id_card, add_time,
                        last_login_time, header_image)

    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{loginPassword,jdbcType=VARCHAR},
            #{name,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP},
            #{lastLoginTime,jdbcType=TIMESTAMP}, #{headerImage,jdbcType=VARCHAR})

    <!-- 使用 mybatis 的 selectKey 配合插入操作，获取自增长的 id -->
    <selectKey keyColumn="id" keyProperty="id" resultType="java.lang.Integer" order="AFTER">
      select LAST_INSERT_ID() as id
    </selectKey>
  </insert>

  <!-- 用户登录验证 -->
  <select id="selectUserByPhoneAndPwd" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />

    from u_user

    <!-- where 关键字仅能有一个 -->
    <where>
      <if test="phone != null and phone != ''">
        and phone = #{phone,jdbcType=VARCHAR}
      </if>

      <if test="loginPassword != null and loginPassword != ''">
        and login_password = #{loginPassword,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <!-- 更新最后一次登录时间 -->
  <update id="updateLastLoginTime" parameterType="org.example.ylb.api.model.User">
    update u_user

    set
    last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP}

    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>